-- Generated by Level Director v2.9.0 on 12/6/2014 2:41:55 PM --
require("lib.LD_HelperG2")

local M = {}

-----------------------------------
function M:loadAssets()
-----------------------------------
	local assets = {}
	assets.spriteSheetData = {}
	

	assets['ballbeach_png']={
		file = 'ballbeach.png',
		name = 'ballbeach_png',
		class = '',
		anchorX = 0,
		anchorY = 0,
		width = 64,
		height = 64,
		frame = 0,
		spriteSheetName = '',
		frameCount = 0,
		sequenceData = {},
		sequenceInfo = {default = '', play= false },

		physics	= 	{	isEnabled = false, source = 'Asset',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						shapes = {
						}
					}
	}
	
	assets['bestgrass_png']={
		file = 'bestgrass.png',
		name = 'bestgrass_png',
		class = '',
		anchorX = 0,
		anchorY = 0,
		width = 1334,
		height = 160,
		frame = 0,
		spriteSheetName = '',
		frameCount = 0,
		sequenceData = {},
		sequenceInfo = {default = '', play= false },

		physics	= 	{	isEnabled = false, source = 'Asset',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						shapes = {
						}
					}
	}
	
	assets['bg_png']={
		file = 'bg.png',
		name = 'bg_png',
		class = '',
		anchorX = 0,
		anchorY = 0,
		width = 1334,
		height = 750,
		frame = 0,
		spriteSheetName = '',
		frameCount = 0,
		sequenceData = {},
		sequenceInfo = {default = '', play= false },

		physics	= 	{	isEnabled = false, source = 'Asset',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						shapes = {
						}
					}
	}
	
	return assets
end -- loadAssets


-------------------------------
function M:createLevel()
-------------------------------
	local objProps = {}
	local level = {}
    local obj = nil
	
	if (application.LevelDirectorSettings.viewGroup == nil) then
		level.view = display.newGroup() 
	else
		level.view = application.LevelDirectorSettings.viewGroup
	end
	
	level.view.anchorChildren =false 
	
	display.setDefault( 'background',  105 / 255, 105 / 255, 105 / 255, 255 / 255)
	display.setDefault( "anchorX", 0 )
	display.setDefault( "anchorY", 0 )	
	display.setDrawMode("wireframe",false)
	
	level.name = 'level1' 
	
	-- Load Assets
	level.assets = self:loadAssets()

	-- Physics properties
	physics.setGravity(0,9.80000019073486) 
	physics.setDrawMode('normal')
	physics.setPositionIterations(8)	
	physics.setVelocityIterations(3)	
	
	level.parallaxEnabled = false
	
	-- Layers
	level.layers = {} 
	---- BG ----
	level.layers['BG'] = {} 
	level.layers['BG'].view = display.newGroup() 
	level.layers['BG'].name = 'BG' 
	
	if (level.parallaxEnabled) then
		level.layers['BG'].speed = {x = 0, y = 0}
		level.layers['BG'].repeated = false
		level.layers['BG'].cullingMethod = 0
	else
		level.layers['BG'].cullingMethod = 0 
	end
	
	level.layers['BG'].objects = {} 

	objProps = 
	{
		name 	= 'background', 
		objType = 'LDObjectImage',
		class = '',
		width	= 1328,
		height	= 752,
		x		= 0,
		y		= 0,
		xScale		= 0.995502248875562 * 1,
		yScale		= 1.00266666666667 * 1,
		rotation	= 0,
		enableDrag	= false, 
		anchorX = 0,
		anchorY = 0,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= 'bg_png',
		physics	= 	{	isEnabled = false, source = 'Object',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
						}
					}
						
		}
	obj = LD_Helper:instance():createObject(level.layers['BG'],objProps, level.assets) 
	
	LD_Helper:instance():insertLayer(level,level.layers['BG'])
	
	---- FG ----
	level.layers['FG'] = {} 
	level.layers['FG'].view = display.newGroup() 
	level.layers['FG'].name = 'FG' 
	
	if (level.parallaxEnabled) then
		level.layers['FG'].speed = {x = 0, y = 0}
		level.layers['FG'].repeated = false
		level.layers['FG'].cullingMethod = 0
	else
		level.layers['FG'].cullingMethod = 0 
	end
	
	level.layers['FG'].objects = {} 

	objProps = 
	{
		name 	= 'grass', 
		objType = 'LDObjectImage',
		class = '',
		width	= 1336,
		height	= 160,
		x		= 0,
		y		= 592,
		xScale		= 1.00149925037481 * 1,
		yScale		= 1 * 1,
		rotation	= 0,
		enableDrag	= false, 
		anchorX = 0,
		anchorY = 0,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= 'bestgrass_png',
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'static',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
						
							{bodyShape = 'Rectangle',
							shape     = {},
							bounce    = 0,
							friction  = 0,
							density   = 1,
							radius    = 10,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0},
						}
					}
						
		}
	obj = LD_Helper:instance():createObject(level.layers['FG'],objProps, level.assets) 
	
	objProps = 
	{
		name 	= 'ball', 
		objType = 'LDObjectImage',
		class = '',
		width	= 64,
		height	= 64,
		x		= 592,
		y		= 120,
		xScale		= 1 * 1,
		yScale		= 1 * 1,
		rotation	= 0,
		enableDrag	= false, 
		anchorX = 0,
		anchorY = 0,
		alpha = 1,
		isVisible = true,
		blendMode = 'normal',
		assetName	= 'ballbeach_png',
		physics	= 	{	isEnabled = true, source = 'Object',
						bodyType  = 'dynamic',
						isFixedRotation = false,
						isSleepingAllowed = true,
						isSensor = false,
						isBullet = false,
						gravityScale = 1,
						shapes = {
						
							{bodyShape = 'Round',
							shape     = {},
							bounce    = 1,
							friction  = 0,
							density   = 1,
							radius    = 28,
							categoryBits = 0,
							maskBits  = 0,
							groupIndex = 0},
						}
					}
						
		}
	obj = LD_Helper:instance():createObject(level.layers['FG'],objProps, level.assets) 
	
	LD_Helper:instance():insertLayer(level,level.layers['FG'])
	
	--level.ldVersion = 2.9.0	-- Level Director Version
	
	-- Parallax (after layers)
	level.canvasWidth = 1334
	level.canvasHeight = 750
	
	if level.parallaxEnabled then
		level.parallaxInfinite = false
		level.parallaxDamping = 1
		LD_Helper:instance():createParallax(level)
	end

	
	
	return level
end -- createLevel

return M

